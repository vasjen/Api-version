name: API Diff on Merge to Master

on:
  pull_request:
    types: [closed] # Запускаем при закрытии PR
    branches:
      - master # Ваша основная ветка

jobs:
  generate-api-diff:
    # Запускаем только если PR был смержен
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest # Используем последнюю Ubuntu

    steps:
      # --- Шаг 1: Получение кода ---
      - name: Checkout base branch state (before merge)
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.base.sha }}
          path: 'base'

      - name: Checkout head branch state (after merge)
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.merge_commit_sha }}
          path: 'head'

      # --- Шаг 2: Настройка .NET ---
      - name: Setup .NET 8 SDK # Нужен для сборки и для CLI 8.1.0
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      # --- Шаг 3: Генерация Swagger для состояния ДО мерджа (base) ---
      - name: Install Swashbuckle CLI (base)
        working-directory: ./base
        run: |
          dotnet new tool-manifest --force
          dotnet tool install Swashbuckle.AspNetCore.Cli --local

      - name: Restore base project dependencies # Добавляем явный restore
        run: dotnet restore ./base/Api-version/Api-version.csproj

      - name: Build base project
        run: dotnet build ./base/Api-version/Api-version.csproj --configuration Release --no-restore # Добавляем --no-restore, т.к. сделали restore выше

      # ДОБАВЛЯЕМ ШАГ ПРОВЕРКИ ВЫВОДА СБОРКИ
      - name: List base build output
        run: ls -l ./base/Api-version/bin/Release/net8.0/
        # Посмотрите в логах этого шага, есть ли файл Swashbuckle.AspNetCore.Swagger.dll

      - name: Generate Swagger (base)
        working-directory: ./base
        run: |
          dotnet swagger tofile --output ../swagger-base.json ./Api-version/bin/Release/net8.0/Api-version.dll v1

      # --- Шаг 4: Генерация Swagger для состояния ПОСЛЕ мерджа (head) ---
      - name: Install Swashbuckle CLI (head)
        working-directory: ./head
        run: |
          dotnet new tool-manifest --force
          dotnet tool install Swashbuckle.AspNetCore.Cli --local

      - name: Restore head project dependencies # Добавляем явный restore
        run: dotnet restore ./head/Api-version/Api-version.csproj

      - name: Build head project
        run: dotnet build ./head/Api-version/Api-version.csproj --configuration Release --no-restore # Добавляем --no-restore

      # ДОБАВЛЯЕМ ШАГ ПРОВЕРКИ ВЫВОДА СБОРКИ
      - name: List head build output
        run: ls -l ./head/Api-version/bin/Release/net8.0/
        # Посмотрите в логах этого шага, есть ли файл Swashbuckle.AspNetCore.Swagger.dll

      - name: Generate Swagger (head)
        working-directory: ./head
        run: |
          dotnet swagger tofile --output ../swagger-new.json ./Api-version/bin/Release/net8.0/Api-version.dll v1

      # --- Шаг 5: Сравнение Swagger файлов с помощью Docker ---
      - name: Run openapi-diff via Docker
        run: |
          echo "Checking for swagger files..."
          ls -l swagger-base.json swagger-new.json
          echo "Running docker diff..."
          docker run --rm -t \
            -v ${{ github.workspace }}:/specs \
            openapitools/openapi-diff:latest \
            --html-detailed /specs/result.html /specs/swagger-base.json /specs/swagger-new.json || true

      # --- Шаг 6: Сохранение отчета как артефакта ---
      - name: Upload HTML Diff Report
        uses: actions/upload-artifact@v4
        with:
          name: api-diff-report-${{ github.event.pull_request.number }}
          path: result.html

      # --- Шаг 7: (Опционально) Отправка уведомления в Telegram ---
      # ... (без изменений) ...
